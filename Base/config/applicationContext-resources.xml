<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd    
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd"> 
    <!-- JNDI DataSource for J2EE environments -->
	<!-- 
	<jee:jndi-lookup id="dataSource" jndi-name="jndiName" />
     -->

	<!-- 读取properties配置文件，文件中使用${}引用 -->
	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations" value="classpath:configuration.properties" />  
    </bean> -->
    <!-- bean下property属性覆盖
    <bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer" >
   		<property name="location" value="classpath:jdbc.properties" />
   </bean>
    -->
    <context:property-placeholder location="classpath:configuration.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">  
        <property name="driverClassName" value="${jdbc.driverClassName}" />  
        <property name="url" value="${jdbc.commonframe.url}" />
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />
        <property name="maxActive" value="5"></property>
        <property name="maxIdle" value="2"></property>
        <property name="maxWait" value="2"></property>
        <property name="defaultAutoCommit" value="true"></property>  
    </bean>  
	
	<!-- define the SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
        	<list>			  
				<value>
					classpath*:com/syou/framework/server/xml/**/*Mapper.xml
				</value>
				<value>
					classpath*:com/syou/designer/server/xml/**/*Mapper.xml
				</value>
			</list>
        </property>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>
    
    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.syou" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    
	<!-- transaction manager -->
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource"/>  
	</bean>
</beans>